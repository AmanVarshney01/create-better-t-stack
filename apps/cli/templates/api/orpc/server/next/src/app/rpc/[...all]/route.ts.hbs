{{#if (eq auth "better-auth")}}
import { createContext } from '@/lib/context'
{{/if}}
import { appRouter } from '@/routers'
import { OpenAPIHandler } from '@orpc/openapi/fetch'
import { OpenAPIReferencePlugin } from '@orpc/openapi/plugins'
import { ZodToJsonSchemaConverter } from '@orpc/zod/zod4'
import { RPCHandler } from '@orpc/server/fetch'
import { NextRequest } from 'next/server'

const rpcHandler = new RPCHandler(appRouter)
const apiHandler = new OpenAPIHandler(appRouter, {
  plugins: [
    new OpenAPIReferencePlugin({
      schemaConverters: [new ZodToJsonSchemaConverter()],
    }),
  ],
})

async function handleRequest(req: NextRequest) {
  const rpcResult = await rpcHandler.handle(req, {
    prefix: '/rpc',
    context: {{#if (eq auth "better-auth")}}await createContext(req){{else}}{}{{/if}},
  })
  if (rpcResult.response) return rpcResult.response

  const apiResult = await apiHandler.handle(req, {
    prefix: '/rpc/api',
    context: {{#if (eq auth "better-auth")}}await createContext(req){{else}}{}{{/if}},
  })
  if (apiResult.response) return apiResult.response

  return new Response('Not found', { status: 404 })
}

export const GET = handleRequest
export const POST = handleRequest
export const PUT = handleRequest
export const PATCH = handleRequest
export const DELETE = handleRequest
