import { View, Text, ScrollView, TouchableOpacity } from "react-native";
import { Container } from "@/components/container";
{{#if (eq api "orpc")}}
import { useQuery } from "@tanstack/react-query";
import { orpc } from "@/utils/orpc";
{{/if}}
{{#if (eq api "trpc")}}
import { useQuery } from "@tanstack/react-query";
import { trpc } from "@/utils/trpc";
{{/if}}
{{#if (and (eq backend "convex") (eq auth "clerk"))}}
import { Link } from "expo-router";
import { Authenticated, AuthLoading, Unauthenticated, useQuery } from "convex/react";
import { api } from "@{{ projectName }}/backend/convex/_generated/api";
import { useUser } from "@clerk/clerk-expo";
import { SignOutButton } from "@/components/sign-out-button";
{{else if (and (eq backend "convex") (eq auth "better-auth"))}}
import { useConvexAuth, useQuery } from "convex/react";
import { api } from "@{{ projectName }}/backend/convex/_generated/api";
import { authClient } from "@/lib/auth-client";
import { SignIn } from "@/components/sign-in";
import { SignUp } from "@/components/sign-up";
{{else if (eq backend "convex")}}
import { useQuery } from "convex/react";
import { api } from "@{{ projectName }}/backend/convex/_generated/api";
{{/if}}

export default function Home() {
  {{#if (eq api "orpc")}}
  const healthCheck = useQuery(orpc.healthCheck.queryOptions());
  {{/if}}
  {{#if (eq api "trpc")}}
  const healthCheck = useQuery(trpc.healthCheck.queryOptions());
  {{/if}}
  {{#if (and (eq backend "convex") (eq auth "clerk"))}}
  const { user } = useUser();
  const healthCheck = useQuery(api.healthCheck.get);
  const privateData = useQuery(api.privateData.get);
  {{else if (and (eq backend "convex") (eq auth "better-auth"))}}
  const healthCheck = useQuery(api.healthCheck.get);
  const { isAuthenticated } = useConvexAuth();
  const user = useQuery(api.auth.getCurrentUser, isAuthenticated ? {} : "skip");
  {{else if (eq backend "convex")}}
  const healthCheck = useQuery(api.healthCheck.get);
  {{/if}}

  return (
    <Container>
      <ScrollView className="flex-1">
        <View className="px-4">
          <Text className="font-mono text-foreground text-3xl font-bold mb-4">
            BETTER T STACK
          </Text>

          {{#unless (and (eq backend "convex") (eq auth "better-auth"))}}
          <View className="bg-card border border-border rounded-xl p-6 mb-6 shadow-sm">
            {{#if (eq backend "convex")}}
            <View className="flex-row items-center gap-3">
              <View
                className={`h-3 w-3 rounded-full ${
                  healthCheck ? "bg-green-500" : "bg-orange-500"
                }`}
              />
              <View className="flex-1">
                <Text className="text-sm font-medium text-card-foreground">
                  Convex
                </Text>
                <Text className="text-muted-foreground">
                  {
                    healthCheck === undefined
                      ? "Checking..."
                      : healthCheck === "OK"
                      ? "Connected to API"
                      : "API Disconnected"
                  }
                </Text>
              </View>
            </View>
            {{else}}
            {{#unless (eq api "none")}}
            <View className="flex-row items-center gap-3">
              <View
                className={`h-3 w-3 rounded-full ${
                  healthCheck.data ? "bg-green-500" : "bg-orange-500"
                }`}
              />
            <View className="flex-1">
              <Text className="text-sm font-medium text-card-foreground">
                {{#if (eq api "orpc")}}ORPC{{else}}TRPC{{/if}}
              </Text>
              <Text className="text-xs text-muted-foreground">
                {healthCheck.isLoading
                  ? "Checking connection..."
                  : healthCheck.data
                  ? "All systems operational"
                  : "Service unavailable"}
              </Text>
            </View>
            </View>
            {{/unless}}
            {{/if}}
          </View>
          {{/unless}}

          {{#if (and (eq backend "convex") (eq auth "clerk"))}}
          <Authenticated>
            <Text>Hello {user?.emailAddresses[0].emailAddress}</Text>
            <Text>Private Data: {privateData?.message}</Text>
            <SignOutButton />
          </Authenticated>
          <Unauthenticated>
            <Link href="/(auth)/sign-in">
              <Text>Sign in</Text>
            </Link>
            <Link href="/(auth)/sign-up">
              <Text>Sign up</Text>
            </Link>
          </Unauthenticated>
          <AuthLoading>
            <Text>Loading...</Text>
          </AuthLoading>
          {{/if}}

          {{#if (and (eq backend "convex") (eq auth "better-auth"))}}
          {user ? (
            <View className="mb-6 p-4 bg-card rounded-lg border border-border">
              <View className="flex-row justify-between items-center mb-2">
                <Text className="text-foreground text-base">
                  Welcome,{" "}
                  <Text className="font-medium">{user.name}</Text>
                </Text>
              </View>
              <Text className="text-muted-foreground text-sm mb-4">
                {user.email}
              </Text>
              <TouchableOpacity
                className="bg-destructive py-2 px-4 rounded-md self-start"
                onPress={() => {
                  authClient.signOut();
                }}
              >
                <Text className="text-white font-medium">Sign Out</Text>
              </TouchableOpacity>
            </View>
          ) : null}
          <View className="mb-6 rounded-lg border border-border p-4">
            <Text className="mb-3 font-medium text-foreground">
              API Status
            </Text>
            <View className="flex-row items-center gap-2">
              <View
                className={`h-3 w-3 rounded-full ${
                  healthCheck ? "bg-green-500" : "bg-red-500"
                }`}
              />
              <Text className="text-muted-foreground">
                {
                  healthCheck === undefined
                    ? "Checking..."
                    : healthCheck === "OK"
                    ? "Connected to API"
                    : "API Disconnected"
                }
              </Text>
            </View>
          </View>
          {!user && (
            <>
              <SignIn />
              <SignUp />
            </>
          )}
          {{/if}}
        </View>
      </ScrollView>
    </Container>
  );
}