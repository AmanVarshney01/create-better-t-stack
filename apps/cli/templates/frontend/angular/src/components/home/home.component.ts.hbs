import { Component, inject, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterLink } from '@angular/router';
import { injectQuery } from '@tanstack/angular-query-experimental';
{{#if (eq api "trpc")}}
import { RpcService } from '../../services/rpc.service';
{{/if}}
{{#if (eq api "orpc")}}
import { RpcService } from '../../services/rpc.service';
{{/if}}

@Component({
 selector: 'app-home',
 standalone: true,
 imports: [CommonModule, RouterLink],
 template: `
    <div class="min-h-screen bg-gray-50 dark:bg-black text-gray-900 dark:text-white">
      <div class="container mx-auto px-4 py-12">
        <pre className="overflow-x-auto font-mono text-sm">
 ██████╗ ███████╗████████╗████████╗███████╗██████╗
 ██╔══██╗██╔════╝╚══██╔══╝╚══██╔══╝██╔════╝██╔══██╗
 ██████╔╝█████╗     ██║      ██║   █████╗  ██████╔╝
 ██╔══██╗██╔══╝     ██║      ██║   ██╔══╝  ██╔══██╗
 ██████╔╝███████╗   ██║      ██║   ███████╗██║  ██║
 ╚═════╝ ╚══════╝   ╚═╝      ╚═╝   ╚══════╝╚═╝  ╚═╝

 ████████╗    ███████╗████████╗ █████╗  ██████╗██╗  ██╗
 ╚══██╔══╝    ██╔════╝╚══██╔══╝██╔══██╗██╔════╝██║ ██╔╝
    ██║       ███████╗   ██║   ███████║██║     █████╔╝
    ██║       ╚════██║   ██║   ██╔══██║██║     ██╔═██╗
    ██║       ███████║   ██║   ██║  ██║╚██████╗██║  ██╗
    ╚═╝       ╚══════╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝
 </pre>
        {{#if (not (eq api "none"))}}
        <div class="bg-white dark:bg-[#111111] rounded-lg p-6 mb-12 border border-gray-200 dark:border-gray-800">
          <h2 class="text-xl font-medium mb-4">API Status</h2>
          <div class="flex items-center space-x-2">
            <div class="w-2 h-2 rounded-full bg-green-500"></div>
            <span class="text-gray-700 dark:text-gray-300">
             {{query.isSuccess() ? 'Connected' : 'Disconnected'}}
            </span>
          </div>
        </div>
        {{/if}}
      </div>
    </div>
  `,
 styles: []
})
export class HomeComponent {
 {{#if (eq api "trpc")}}
 private _rpc = inject(RpcService);
 query = injectQuery(() => ({
  queryKey: ['healthCheck'],
  queryFn: () => this._rpc.proxy.healthCheck.query(),
 }));
 {{/if}}
 {{#if (eq api "orpc")}}
 private _rpc = inject(RpcService);
 query = injectQuery(() => this._rpc.utils.healthCheck.queryOptions());
 {{/if}}
